<UserControl x:Class="EasyBudgetApp.Views.NewAccountView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:w="clr-namespace:EasyBudgetApp.Views.Controls"
             xmlns:views="clr-namespace:EasyBudgetApp.Views"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             >
   
    <Grid MinWidth="300">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"></RowDefinition>
            <RowDefinition Height="Auto"></RowDefinition>
        </Grid.RowDefinitions>

        <StackPanel Grid.Row="0" HorizontalAlignment="Stretch" Margin="5" 
                    IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}">
            <Label>Company Name</Label>
            <ComboBox ItemsSource="{Binding Companies}"
                      Text="{Binding Path=Name}"
                      SelectedItem="{Binding SelectedCompany}"
                      Style="{DynamicResource VirtualisedMetroComboBox}"
                      controls:TextBoxHelper.Watermark="Please select a company..."
                      controls:TextBoxHelper.ClearTextButton="True"
                      DisplayMemberPath="Name"
                      IsEditable="True"
                      MaxDropDownHeight="250">
                <ComboBox.ItemContainerStyle>
                    <Style TargetType="ComboBoxItem">
                        <Setter Property="IsEnabled" Value="{Binding IsSupported}"></Setter>
                    </Style>
                </ComboBox.ItemContainerStyle>
            </ComboBox>
        </StackPanel>

        <Grid Grid.Row="1" Visibility="{Binding SelectedCompany.IsSupported, Converter={StaticResource BoolToVisibilityConverter}}"
              IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBooleanConverter}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <ItemsControl Grid.Row="0" Margin="5" ItemsSource="{Binding SelectedCompany.CredentialFields}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="0,2,0,3">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="80" Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Label Grid.Column="0" Content="{Binding Name}" MinWidth="80"/>
                            <PasswordBox Grid.Column="1" x:Name="PasswordBox" Visibility="Collapsed" 
                                         PasswordChanged="PasswordBoxPasswordChanged"
                                         controls:TextBoxHelper.Watermark="Password"/>
                            <TextBox Grid.Column="1" x:Name="TextBox" Text="{Binding Value}" Visibility="Visible"/>
                        </Grid>
                            
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding Name}" Value="Password">
                                <Setter TargetName="PasswordBox" Property="Visibility" Value="Visible" ></Setter>
                                <Setter TargetName="TextBox" Property="Visibility" Value="Collapsed" ></Setter>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <Button Grid.Row="1" Margin="5" Style="{DynamicResource SquareButtonStyle}" Content="Show Accounts" 
                    Command="{Binding ShowAccountsCommand}"
                    Visibility="{Binding IsBusy, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>

            <ProgressBar Grid.Row="1" Margin="5" Height="24" IsIndeterminate="True"
                         HorizontalAlignment="Stretch" VerticalAlignment="Center"
                         Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <TextBlock Grid.Row="2" Text="{Binding Error}" Foreground="{StaticResource ControlsValidationBrush}" HorizontalAlignment="Center"
                       Margin="10,20,10,20" FontSize="16" FontStyle="Italic" 
                       Visibility="{Binding Error, Converter={StaticResource EmptyToVisibilityConverter}}"/>
            
            <StackPanel Grid.Row="2" Margin="0, 25, 0, 0"
                        Visibility="{Binding NewAccounts.Count,  UpdateSourceTrigger=Default, Converter={StaticResource IntToVisibilityConverter}}">
                <ListView ItemsSource="{Binding NewAccounts}" BorderThickness="0" Margin="5" Background="Transparent"
                          Visibility="{Binding NewAccounts.Count,  UpdateSourceTrigger=Default, Converter={StaticResource IntToVisibilityConverter}}">
                    <ListView.Resources>
                        <Style TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource {x:Type ListViewItem}}">
                            <Setter Property="Margin" Value="0,0,0,5"/>
                            <Setter Property="IsSelected" Value="{Binding IsSelected}"></Setter>
                            <Setter Property="Focusable" Value="False"/>
                        </Style>
                        <Style x:Key="CustomMetroToggleSwitchButton" TargetType="{x:Type controls:ToggleSwitchButton}" BasedOn="{StaticResource MetroToggleSwitchButton}">
                            <Setter Property="SwitchForeground" Value="YellowGreen"/>
                        </Style>
                    </ListView.Resources>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="{StaticResource AccentColorBrush3}" BorderThickness="2">
                                <StackPanel Orientation="Horizontal">
                                    <controls:ToggleSwitch IsChecked="{Binding IsEnabled}" ToggleSwitchButtonStyle="{StaticResource CustomMetroToggleSwitchButton}"
                                           OnLabel="" OffLabel=""/>
                                    <TextBlock Text="{Binding Details}" Margin="20,0,0,0" FontSize="14"  VerticalAlignment="Center"/>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>

                <Button Margin="5" Style="{DynamicResource SquareButtonStyle}" Content="Add Accounts" Command="{Binding AddAccountsCommand}"/>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
